<?xml version="1.0"?>
<project name="build-common" default="compile" xmlns:artifact="urn:maven-artifact-ant">
  <property name="src.dir"      value="src"/>
  <property name="tsrc.dir"     value="tests"/>
  <property name="target.dir"   value="target"/>
  <property name="classes.dir"  value="${target.dir}/classes"/>
  <property name="tclasses.dir" value="${target.dir}/test-classes"/>

  <!-- Default to forking for junit so its assertion enabling is respected. If you have assertions
       enabled in your JVM already, pass -Djunit.fork=false to ant to speed things up a bit. -->
  <property name="junit.fork"   value="true"/>

  <!-- used to include additional source code in our jar file; -->
  <!-- pesky hack needed by gwtbox2d -->
  <property name="aux.src.dir"  value="notused"/>

  <import file="build-maven.xml"/>

  <target name="-prepare" depends="-init-maven-ant">
    <mkdir dir="${target.dir}"/>

    <!-- read our POM and declare our classpaths -->
    <artifact:pom id="pom" file="pom.xml"/>
    <artifact:dependencies pathId="classpath" pomRefId="pom" useScope="compile"/>
    <artifact:dependencies pathId="test.classpath" pomRefId="pom" useScope="test"/>

    <!-- we'll use this classpath when compiling and running tests -->
    <path id="built.classpath">
      <path refid="test.classpath"/>
      <pathelement location="${classes.dir}"/>
    </path>

    <!-- check whether we have test source -->
    <condition property="have.tests">
      <resourceexists><file file="${tsrc.dir}"/></resourceexists>
    </condition>
  </target>

  <target name="clean" description="Cleans out all build results.">
    <delete dir="${target.dir}"/>
  </target>

  <target name="compile" depends="-prepare" description="Compiles main code.">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}" includeAntRuntime="false"
           debug="on" deprecation="on" source="1.6" target="1.6">
      <classpath refid="classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <target name="compile-tests" depends="compile" if="have.tests"
          description="Compiles test code.">
    <mkdir dir="${tclasses.dir}"/>
    <javac srcdir="${tsrc.dir}" destdir="${tclasses.dir}" includeAntRuntime="false"
           debug="on" deprecation="on" source="1.6" target="1.6">
      <classpath refid="built.classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <property name="test" value=""/>
  <target name="test" depends="compile-tests" if="have.tests"
          description="Runs unit tests. Use -Dtest=Foo to run only FooTest.">
    <taskdef name="unit" classpathref="test.classpath"
      classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>
    <mkdir dir="${target.dir}/test-reports"/>
    <unit printsummary="off" haltonfailure="yes" fork="${junit.fork}">
      <classpath>
        <path refid="built.classpath"/>
        <pathelement location="${tclasses.dir}"/>
      </classpath>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
      <batchtest todir="${target.dir}/test-reports">
        <fileset dir="${tsrc.dir}" includes="**/*${test}*Test.java"/>
      </batchtest>
      <assertions>
        <enable/>
      </assertions>
    </unit>
  </target>

  <target name="package" depends="test" description="Builds jar files.">
    <jar destfile="${target.dir}/${pom.artifactId}-${pom.version}.jar">
      <fileset dir="${classes.dir}" includes="**/*"/>
      <!-- we include the source in the main jar for use by GWT (.java, .xml, etc.) -->
      <fileset dir="${src.dir}" includes="**/*"/>
      <fileset erroronmissingdir="false" dir="${aux.src.dir}" includes="**/*"/>
    </jar>
    <jar destfile="${target.dir}/${pom.artifactId}-${pom.version}-sources.jar">
      <fileset dir="${src.dir}" includes="**/*.java"/>
    </jar>
  </target>

  <target name="install" depends="package"
          description="Deploys build artifacts to local Maven repository.">
    <artifact:install file="${target.dir}/${pom.artifactId}-${pom.version}.jar">
      <pom refid="pom"/>
      <attach file="${target.dir}/${pom.artifactId}-${pom.version}-sources.jar"
              classifier="sources"/>
    </artifact:install>
  </target>
</project>
